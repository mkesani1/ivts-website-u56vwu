[pytest]
# Directory where test files are located
testpaths = tests
# Pattern for test file names
python_files = test_*.py
# Pattern for test function names
python_functions = test_*
# Pattern for test class names
python_classes = Test*
# Additional command line options to be added by default
addopts = --cov=app --cov-report=term-missing --cov-report=xml:coverage.xml --cov-report=html:coverage_html --junitxml=test-results.xml -v
# Show extra test summary info as specified by chars
xvs = True
# Enable log display during test run
log_cli = True
# Set logging level for test execution
log_cli_level = INFO
# Format for log messages during test execution
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
# Format for timestamps in log messages
log_cli_date_format = %Y-%m-%d %H:%M:%S

[markers]
# For tests that verify individual components in isolation
unit = mark a test as a unit test
# For tests that verify interactions between components
integration = mark a test as an integration test
# For tests that verify API endpoints
api = mark a test as an API test
# For tests that take longer to execute
slow = mark a test as slow running
# For tests that verify security features and requirements
security = mark a test as a security test

[env]
# Set application environment to test mode
ENVIRONMENT = test
# Flag to indicate testing mode
TESTING = True
# Database URL for testing with SQLite in-memory database
TEST_DATABASE_URL = sqlite:///./test.db
# Secret key for testing authentication and encryption
SECRET_KEY = test_secret_key_for_testing_purposes_only_not_for_production
# Enable debug mode for detailed error information
DEBUG = True
# Set logging level for application under test
LOG_LEVEL = DEBUG