[build-system]
requires = ["setuptools>=65.0.0", "wheel>=0.38.0"]
build-backend = "setuptools.build_meta"

[project]
name = "indivillage-backend"
version = "0.1.0"
description = "Backend API for IndiVillage.com website"
readme = "README.md"
authors = [
    {name = "IndiVillage Development Team", email = "dev@indivillage.com"}
]
license = {text = "Proprietary"}
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Application"
]
dependencies = [
    "fastapi>=0.95.0",
    "uvicorn>=0.22.0",
    "gunicorn>=20.1.0",
    "pydantic>=1.10.7",
    "sqlalchemy>=1.4.0",
    "alembic>=1.10.4",
    "psycopg2-binary>=2.9.6",
    "python-dotenv>=1.0.0",
    "python-multipart>=0.0.6",
    "boto3>=1.26.0",
    "botocore>=1.29.0",
    "requests>=2.31.0",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "pillow>=10.0.0",
    "contentful>=2.0.0",
    "contentful-management>=2.0.0",
    "redis>=4.5.4",
    "backoff>=2.2.1",
    "circuitbreaker>=1.4.0",
    "pyjwt>=2.7.0",
    "passlib>=1.7.4",
    "bcrypt>=4.0.1",
    "python-jose>=3.3.0",
    "cryptography>=40.0.2",
    "celery>=5.2.7",
    "jinja2>=3.1.2",
    "aiofiles>=23.1.0",
    "httpx>=0.24.0",
    "tenacity>=8.2.2",
    "prometheus-client>=0.16.0",
    "sentry-sdk>=1.21.0",
    "pydantic-settings>=2.0.0",
    "email-validator>=2.0.0",
    "openpyxl>=3.1.2",
    "python-magic>=0.4.27",
    "clamd>=1.0.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.3.1",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.10.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.3.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.3.0",
    "pre-commit>=3.3.2",
    "httpx>=0.24.1",
    "debugpy>=1.6.7",
    "faker>=18.9.0",
    "factory-boy>=3.2.1",
    "bandit>=1.7.5",
    "safety>=2.3.5",
]

[project.urls]
Homepage = "https://github.com/indivillage/indivillage-website"
Documentation = "https://github.com/indivillage/indivillage-website/docs"
Repository = "https://github.com/indivillage/indivillage-website.git"

[project.scripts]
start = "python -m app.main"
dev = "uvicorn app.main:app --reload --host 0.0.0.0 --port 8000"
test = "pytest"
lint = "flake8 app tests"
format = "black app tests && isort app tests"
typecheck = "mypy app"
security = "bandit -r app && safety check"

[tool.black]
line-length = 100
target-version = ["py310"]
include = '\\.pyi?$'
exclude = '/(\\.git|\\.venv|venv|migrations)/'

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["**/migrations/*.py"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
strict_optional = true
plugins = ["pydantic.mypy"]

[tool.pytest]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"
addopts = [
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=xml:coverage.xml",
    "--cov-report=html:coverage_html", 
    "--junitxml=test-results.xml",
    "-v"
]
markers = [
    "unit: mark a test as a unit test",
    "integration: mark a test as an integration test",
    "api: mark a test as an API test",
    "slow: mark a test as slow running",
    "security: mark a test as a security test"
]
env = [
    "ENVIRONMENT=test",
    "TESTING=True"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError"
]